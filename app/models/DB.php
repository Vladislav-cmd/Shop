<?php
  // Шаблон проектирования ОДИНОЧКА
  // Позволяет нам создать объект на основе какого-то класса лишь один раз
  // Как раз в нашем случае это нам и нужно, то есть необходимо лишь 1 раз подлкючиться к БД
  // а потом уже к подключенной БД как бы ссылаться

  class DB {
    // 1) необходимо создать статическую переменную
    // 2) создать метод, в котором будем реализовывать эту статическую переменную,
    // то есть добавлять в неё какое-то значение
    // 3) запретить создание каких-либо объектов на основе этого класса
    private static $_db = null;

    // Будем проверять, установлено ли у нас соединение с внутренней переменной
    // если нет, то будем устанвливать
    public static function getInstanse() {
      // если сама переменная пустая
      if(self::$_db == null)
        // то устанавливаем в неё значения
        self::$_db = new PDO('mysql:host=localhost;dbname=ecommerce', 'root', '', [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]);
        // если переменная не пустая, то ничего в неё заново не добавляем, а просто возвращаем эту переменную,
        // в которой уже итак есть подключение к БД
      return self::$_db;
    }


    // запрещаем создание объектов на основе этого класса
    // так как он private, то соответсвенно к нему доступа вне этого класса никто не будет иметь
    // поэтому и объектов на его основе и нельзя будет создать
    private function __construct() {}
    // магический метод, вызывается при клонировании объектов (нельзя будет выполнить клонирование объектов)
    private function __clone() {}
    // маг метод, срабатывает при восстановлении различных данных
    private function __wakeup() {}
  }
