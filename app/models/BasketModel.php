<?php
  // запускаем работу с сессия
  session_start();

  class BasketModel {
    // для реализации корзины будем использовать сессии
    // устанавливать id тех товаров, которые хотим приобрести

    // название сессии, с которой мы работаем
    private $session_name = 'cart';

    // функция будет проверять установлена ли сейчас сессия
    public function isSetSession() {
      return isset($_SESSION[$this->session_name]);
    }

    // функция для удаления сессии
    public function  deleteSession() {
      unset($_SESSION[$this->session_name]);
    }

    // возвращает значение, которое записано в определенную сессию
    public function getSession() {
      return $_SESSION[$this->session_name];
    }

    // добавлять товары в сессию
    // будет принимать id товара, кот необходимо записать в сессию
    public function addToCart($itemID) {
      // изначально проверяем, установлена ли сейчас сессия
      if(!$this->isSetSession())
      // если сессия не установлена то устанавливаем в нее id первого товара
      // который хотим приобрести
        $_SESSION[$this->session_name] = $itemID;
      // если же сессия уже была установлена
      else {
        // если пользователь повторно нажимает купить для одного и того же товара,
        // то чтобы этот товар заново не добавлялся в сессию
        $items = explode(",", $_SESSION[$this->session_name]);

        $itemExist = false;
        foreach ($items as $el) {
          // если такой элемент уже будет присутствовать в сессии, то для него устанавливаем true
          if($el == $itemID)
            $itemExist = true;
        }
        // если $itemExist = false, то есть такого товара не существует ещё в корзине
        // то добавляем в сессию
        if(!$itemExist)
          $_SESSION[$this->session_name] = $_SESSION[$this->session_name].','.$itemID;
      }
    }

    // функция для удаления конкретного товара из корзины
    public function deleteOneFromSession($itemID) {
        // передается id товара конкретного товара
        //echo '<br>'.$itemID.'<br>';

        // преобразовывает строку в массив, разделяя элементы по зяпятой
        $items = explode(",", $_SESSION[$this->session_name]);
        // наглядно выводим полученный массив товаров с их id
        // print_r($items);

        // Если всего один товар и мы его удаляем, то лучше удалить просто всю сессию
        if(count($items) == 1) {
            $this->deleteSession();
            return; // Указываем return, чтобы код внутри функции дальше не обрабатывался
        }

        $new_items = []; // Создаем новый пустой массив
        foreach ($items as $el) { // Перебираем все элементы
          if($el != $itemID) // Есил сейчас элемент не равен тому что был передан в качестве параметра в функцию
            array_push($new_items, $el); // то добавляем его в новый массив
        }

        // По итогу у нас будет массив, который будет состоять из всех элементов, кроме того, что удаляется
        // Объединяем все в строку (каждый элемент через запятую)
        // Устанавливаем эту строку в сессию
        $_SESSION[$this->session_name] = implode($new_items, ",");
    }



    // будет подсчитывать количество элементов, которые есть внутри сессии
    public function countItems() {
      // если сессия не установлена, то это означает, что кол-во элементов,
      // которое добавили в корзину = 0
      if(!$this->isSetSession())
        return 0;
      // иначе, если сессия все таки установлена
      // то необходимо подсчитать сколько элементов записано в сессию
      else {
        // через explode разделяем все те элементы, что находятся у нас в сессии по запятой
        $items = explode(",", $_SESSION[$this->session_name]);
        // возвращаем кол-во элементов
        return count($items);
      }
    }
  }
